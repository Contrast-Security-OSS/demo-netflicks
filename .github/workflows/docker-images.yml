name: Docker Image CI

on:
  push:
    branches: 
      - main
    tags: 
      - v*
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:

  build-base:
    name: Docker Build Base (no-agent)
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout branch
        uses: actions/checkout@v4
      -
        name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      -
        name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
        with: 
          platforms: linux/amd64,linux/arm64
      - 
        name: Create cache for docker images for use in the next job
        uses: actions/cache@v4
        with:
          key: latest-no-agent
          path: ${{ runner.temp }}
      -
        name: Build and push Docker images
        uses: docker/build-push-action@v5
        with: 
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: contrastsecuritydemo/netflicks:latest-no-agent
          outputs: type=docker,dest=${{ runner.temp }}/latest-no-agent.tar


  
  build-contrast:
    name: Docker Build Contrast (agent)
    runs-on: ubuntu-latest
    needs: 
      - build-base
    steps:
      -
        name: Checkout branch
        uses: actions/checkout@v4
      -
        name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      -
        name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
        with: 
          platforms: linux/amd64,linux/arm64
      -
        name: Create cache for docker images for use in the next job
        uses: actions/cache@v4
        with:
          key: latest
          path: ${{ runner.temp }}
      -
        name: Build and push Docker images
        uses: docker/build-push-action@v5
        with: 
          push: false
          load: true
          tags: contrastsecuritydemo/netflicks:latest
          outputs: type=docker,dest=${{ runner.temp }}/latest.tar


  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs:
      - build-base
      - build-contrast
    steps:
      - 
        name: Restore cached docker images
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}
          key: latest-no-agent
      -
        name: Restore cached docker images
        uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}
          key: latest
      - 
        name: Load images
        run: |
          docker load --input ${{ runner.temp }}/latest-no-agent.tar
          docker load --input ${{ runner.temp }}/latest.tar
      -
        name: Checkout branch
        uses: actions/checkout@v4
      -
        name: Run docker-compose tests
        run: | 
          docker compose up -d 
      - 
        name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - 
        name: Install dependencies
        run: | 
          cd tests
          npm ci
          
      - 
        name: Install playwright browsers
        run: |
          cd tests
          npx playwright install --with-deps chromium
      - 
        name: Run Playwright tests
        run: |
          cd tests
          BASEURL=http://web:8081 npx playwright test assess/*.ts
      - 
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  pre-merge:
    name: Prepare to merge
    runs-on: ubuntu-latest
    needs: 
      - test

    steps:              
      - name: Docker Metadata action
        id: metadata    
        uses: docker/metadata-action@v5
        with:
          images: contrastsecuritydemo/netflicks
          flavor: |
            latest=true
            suffix=agent
          tags: |
            type=semver,pattern={{version}}, priority=100
            type=semver,pattern={{major}}.{{minor}}, priority=200
          
      - name: Version number 
        run: |
          echo Getting the old build number
          echo $(echo ${{ steps.metadata.outputs.tags }})

          


  merge:
    name: Merge if PR is merged and tests pass
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    needs: 
      - test

    steps:
      - run: |
          echo The PR was merged
